{"version":3,"sources":["@wordpress/edit-site/src/components/block-editor/index.js"],"names":["useSelect","useMemo","useCallback","uploadMedia","useEntityProp","parse","serialize","BlockEditorProvider","BlockEditorKeyboardShortcuts","BlockInspector","WritingFlow","ObserveTyping","BlockList","ButtonBlockerAppender","Sidebar","BlockEditor","_settings","settings","canUserCreateMedia","select","_canUserCreateMedia","canUser","mediaUpload","onError","rest","wpAllowedMimeTypes","allowedMimeTypes","message","content","_setContent","initialBlocks","parsedContent","length","undefined","blocks","setBlocks","setContent","nextBlocks"],"mappings":";;;;;AAAA;;;AAGA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,oBAArC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AACA,SACCC,mBADD,EAECC,4BAFD,EAGCC,cAHD,EAICC,WAJD,EAKCC,aALD,EAMCC,SAND,EAOCC,qBAPD,QAQO,yBARP;AAUA;;;;AAGA,OAAOC,OAAP,MAAoB,YAApB;AAEA,eAAe,SAASC,WAAT,OAAgD;AAAA,MAAdC,SAAc,QAAxBC,QAAwB;AAC9D,MAAMC,kBAAkB,GAAGlB,SAAS,CAAE,UAAEmB,MAAF,EAAc;AACnD,QAAMC,mBAAmB,GAAGD,MAAM,CAAE,MAAF,CAAN,CAAiBE,OAAjB,CAA0B,QAA1B,EAAoC,OAApC,CAA5B;;AACA,WAAOD,mBAAmB,IAAIA,mBAAmB,KAAK,KAAtD;AACA,GAHmC,EAGjC,EAHiC,CAApC;AAIA,MAAMH,QAAQ,GAAGhB,OAAO,CAAE,YAAM;AAC/B,QAAK,CAAEiB,kBAAP,EAA4B;AAC3B,aAAOF,SAAP;AACA;;AACD,6BACIA,SADJ;AAECM,MAAAA,WAFD,8BAEqC;AAAA,YAArBC,QAAqB,SAArBA,OAAqB;AAAA,YAATC,IAAS;;AACnCrB,QAAAA,WAAW;AACVsB,UAAAA,kBAAkB,EAAET,SAAS,CAACU,gBADpB;AAEVH,UAAAA,OAAO,EAAE;AAAA,gBAAII,OAAJ,SAAIA,OAAJ;AAAA,mBAAmBJ,QAAO,CAAEI,OAAF,CAA1B;AAAA;AAFC,WAGPH,IAHO,EAAX;AAKA;AARF;AAUA,GAduB,EAcrB,CAAEN,kBAAF,EAAsBF,SAAtB,CAdqB,CAAxB;;AAL8D,uBAoB7BZ,aAAa,CAC7C,UAD6C,EAE7C,aAF6C,EAG7C,SAH6C,CApBgB;AAAA;AAAA,MAoBtDwB,OApBsD;AAAA,MAoB7CC,WApB6C;;AAyB9D,MAAMC,aAAa,GAAG7B,OAAO,CAAE,YAAM;AACpC,QAAK,OAAO2B,OAAP,KAAmB,UAAxB,EAAqC;AACpC,UAAMG,aAAa,GAAG1B,KAAK,CAAEuB,OAAF,CAA3B;AACA,aAAOG,aAAa,CAACC,MAAd,GAAuBD,aAAvB,GAAuCE,SAA9C;AACA;AACD,GAL4B,EAK1B,EAL0B,CAA7B;;AAzB8D,wBA+BhB7B,aAAa,CAC1D,UAD0D,EAE1D,aAF0D,EAG1D,QAH0D,CA/BG;AAAA;AAAA;AAAA,MA+BtD8B,MA/BsD,iCA+B7CJ,aA/B6C;AAAA,MA+B9BK,SA/B8B;;AAoC9D,MAAMC,UAAU,GAAGlC,WAAW,CAAE,UAAEmC,UAAF,EAAkB;AACjDF,IAAAA,SAAS,CAAEE,UAAF,CAAT;;AACAR,IAAAA,WAAW,CAAEvB,SAAS,CAAE+B,UAAF,CAAX,CAAX;AACA,GAH6B,EAG3B,EAH2B,CAA9B;AAIA,SACC,cAAC,mBAAD;AACC,IAAA,QAAQ,EAAGpB,QADZ;AAEC,IAAA,KAAK,EAAGiB,MAFT;AAGC,IAAA,OAAO,EAAGC,SAHX;AAIC,IAAA,QAAQ,EAAGC;AAJZ,KAMC,cAAC,4BAAD,OAND,EAOC,cAAC,OAAD,CAAS,aAAT,QACC,cAAC,cAAD,OADD,CAPD,EAUC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,WAAD,QACC,cAAC,aAAD,QACC,cAAC,SAAD;AACC,IAAA,SAAS,EAAC,oCADX;AAEC,IAAA,cAAc,EAAGvB;AAFlB,IADD,CADD,CADD,CAVD,CADD;AAuBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { uploadMedia } from '@wordpress/media-utils';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { parse, serialize } from '@wordpress/blocks';\nimport {\n\tBlockEditorProvider,\n\tBlockEditorKeyboardShortcuts,\n\tBlockInspector,\n\tWritingFlow,\n\tObserveTyping,\n\tBlockList,\n\tButtonBlockerAppender,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Sidebar from '../sidebar';\n\nexport default function BlockEditor( { settings: _settings } ) {\n\tconst canUserCreateMedia = useSelect( ( select ) => {\n\t\tconst _canUserCreateMedia = select( 'core' ).canUser( 'create', 'media' );\n\t\treturn _canUserCreateMedia || _canUserCreateMedia !== false;\n\t}, [] );\n\tconst settings = useMemo( () => {\n\t\tif ( ! canUserCreateMedia ) {\n\t\t\treturn _settings;\n\t\t}\n\t\treturn {\n\t\t\t..._settings,\n\t\t\tmediaUpload( { onError, ...rest } ) {\n\t\t\t\tuploadMedia( {\n\t\t\t\t\twpAllowedMimeTypes: _settings.allowedMimeTypes,\n\t\t\t\t\tonError: ( { message } ) => onError( message ),\n\t\t\t\t\t...rest,\n\t\t\t\t} );\n\t\t\t},\n\t\t};\n\t}, [ canUserCreateMedia, _settings ] );\n\tconst [ content, _setContent ] = useEntityProp(\n\t\t'postType',\n\t\t'wp_template',\n\t\t'content'\n\t);\n\tconst initialBlocks = useMemo( () => {\n\t\tif ( typeof content !== 'function' ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\treturn parsedContent.length ? parsedContent : undefined;\n\t\t}\n\t}, [] );\n\tconst [ blocks = initialBlocks, setBlocks ] = useEntityProp(\n\t\t'postType',\n\t\t'wp_template',\n\t\t'blocks'\n\t);\n\tconst setContent = useCallback( ( nextBlocks ) => {\n\t\tsetBlocks( nextBlocks );\n\t\t_setContent( serialize( nextBlocks ) );\n\t}, [] );\n\treturn (\n\t\t<BlockEditorProvider\n\t\t\tsettings={ settings }\n\t\t\tvalue={ blocks }\n\t\t\tonInput={ setBlocks }\n\t\t\tonChange={ setContent }\n\t\t>\n\t\t\t<BlockEditorKeyboardShortcuts />\n\t\t\t<Sidebar.InspectorFill>\n\t\t\t\t<BlockInspector />\n\t\t\t</Sidebar.InspectorFill>\n\t\t\t<div className=\"editor-styles-wrapper\">\n\t\t\t\t<WritingFlow>\n\t\t\t\t\t<ObserveTyping>\n\t\t\t\t\t\t<BlockList\n\t\t\t\t\t\t\tclassName=\"edit-site-block-editor__block-list\"\n\t\t\t\t\t\t\trenderAppender={ ButtonBlockerAppender }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ObserveTyping>\n\t\t\t\t</WritingFlow>\n\t\t\t</div>\n\t\t</BlockEditorProvider>\n\t);\n}\n"]}